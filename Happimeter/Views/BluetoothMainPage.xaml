<?xml version="1.0" encoding="UTF-8"?>
<ContentPage 
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="Happimeter.Views.BluetoothMainPage"
    xmlns:local="clr-namespace:Happimeter.Controls"
    Title="Bluetooth">
	<ContentPage.Content>
        <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
            <RelativeLayout HeightRequest="220">
                <Image 
                       Aspect="AspectFill" 
                       RelativeLayout.WidthConstraint="{ConstraintExpression  
                       Type=RelativeToParent,  
                       Property=Width,  
                       Factor=1}"
                       RelativeLayout.HeightConstraint="{ConstraintExpression  
                       Type=RelativeToParent,  
                       Property=Height,  
                       Factor=1}">
                        <Image.Source>
                            <OnPlatform x:TypeArguments="ImageSource"
                                        iOS="happinessfactory"
                                        Android="happinessfactory.png" />
                        </Image.Source>
                    </Image>
                <Grid RowSpacing="10" Padding="10, 20, 10, 0" ColumnSpacing="20" BackgroundColor="#B2307AEA"
                      RelativeLayout.WidthConstraint="{ConstraintExpression  
                      Type=RelativeToParent,  
                      Property=Width,  
                      Factor=1}"
                      RelativeLayout.HeightConstraint="{ConstraintExpression  
                      Type=RelativeToParent,  
                      Property=Height,  
                      Factor=1}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Style="{StaticResource HeaderOnBackground}" Grid.ColumnSpan="2" Grid.Row="0" Text="Bluetooth Pairing" />

                    <StackLayout Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalOptions="CenterAndExpand">
                        <Label Style="{StaticResource TextOnBackground}" FontAttributes="Bold">Paired At:</Label>
                        <Label Style="{StaticResource TextOnBackground}" Text="{Binding PairedAt, StringFormat='{0:MMMM dd, yyyy HH:mm}'}" />
                    </StackLayout>

                    <StackLayout Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalOptions="CenterAndExpand">
                        <Label Style="{StaticResource TextOnBackground}" FontAttributes="Bold" Text="Sync. At:"></Label>
                        <Label Style="{StaticResource TextOnBackground}" Text="{Binding SynchronizedAt, StringFormat='{0:MMMM dd, yyyy HH:mm}'}" />
                    </StackLayout>

                    <local:MyButton  Grid.Row="3" Grid.Column="0" Text="Exchange Data" Command="{Binding ExchangeDataCommand}" Style="{StaticResource ButtonWithoutBackground}" HorizontalOptions="Center" VerticalOptions="CenterAndExpand" />
                    <local:MyButton  Grid.Row="3" Grid.Column="1" Text="Remove Pairing" Command="{Binding RemovePairingCommand}" Style="{StaticResource ButtonWithoutBackground}" />

                    <StackLayout Grid.Row="4" Grid.ColumnSpan="2" HorizontalOptions="CenterAndExpand" VerticalOptions="FillAndExpand" Orientation="Horizontal">
                        <Label Style="{StaticResource TextOnBackground}" IsVisible="{Binding DataExchangeStatusIsVisible}" FontSize="12" Text="{Binding DataExchangeStatus}"></Label>
                        <Label Style="{StaticResource TextOnBackground}" IsVisible="{Binding DataExchangeProgressIsVisible}" FontSize="12" Text="{Binding DataExchangeProgress, StringFormat='Got {0} bytes'}"></Label>
                    </StackLayout>
                </Grid>
            </RelativeLayout>
            <ListView ItemsSource="{Binding Items}" Refreshing="ListItems_Refreshing" IsPullToRefreshEnabled="true" x:Name="ListView" ItemAppearing="Handle_ItemAppearing">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <StackLayout>
                                <Label Text="{Binding TimeStamp, StringFormat='{0:MMMM dd, yyyy HH:mm}'}" />
                                <StackLayout Orientation="Horizontal">
                                    <Label FontSize="12" Text="{Binding StepCount, StringFormat='Steps: {0:0}'}" /> 
                                    <Label FontSize="12" Text="{Binding AvgHeartrate, StringFormat='Heartrate: {0:0.0}'}" />
                                    <Label FontSize="12" Text="{Binding AvgMicrophone, StringFormat='Microphone: {0:0.00000}'}" />
                                    <Label FontSize="12" IsVisible="{Binding SynchronizedWithServer}" Text="Synchronized" />
                                </StackLayout>
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackLayout>
	</ContentPage.Content>
</ContentPage>
